@startuml
'https://plantuml.com/class-diagram

class Command {
    - String commandStr
    - String commandName
    - String[] rawCommand
    - List<String> params
    - Set<String> optionsSet
    - Set<String> filepaths
    
}

interface CommandValidator {
    + boolean validate(Command command)
}

class WcCommandValidator implements CommandValidator {
    + boolean validate(Command command)
    - void validateCommandOptionsAndFilePath(Command command)
    - void validateCommandFilePath(String filePath)
}

class ExitCommandValidator implements CommandValidator {
    + boolean validate(Command command)
}

class NonWcCommandValidator implements CommandValidator {
    + boolean validate(Command command)
}

interface CommandExecutor {
	void execute(Command command)
}

class WcCommandExecutor implements CommandExecutor {
    - Printer printer
    - OptionExecutorFactory optionExecutorFactory
    + void execute(Command command)
}

class ExitCommandExecutor implements CommandExecutor {
    - Printer printer
    + void execute(Command command)
}

class NonWcCommandExecutor implements CommandExecutor{
	-  Printer consolePrinter
	-  Printer filePrinter
	+ void execute(Command command)
}

class CommandExecutorFactory {
	- Map<String, CommandExecutor> commandExecutorMap
	+ CommandExecutor getCommandExecutor(Command command)
}

class CommandValidatorFactory {
	- Map<String, CommandValidator> commandValidatorMap
	+ CommandValidator getCommandValidator(Command command)
}

CommandValidatorFactory -down- CommandValidator
CommandExecutorFactory -down- CommandExecutor

interface CommandProcessorService {
	void processCommand(Command command)
}

class CommandProcessorServiceImpl  {
    - CommandValidatorFactory commandValidatorFactory
    - CommandExecutorFactory commandExecutorFactory
    + void processCommand(Command command)
}

CommandProcessorServiceImpl .down.|> CommandProcessorService

CommandProcessorService -right- CommandValidatorFactory
CommandProcessorService -left- CommandExecutorFactory

interface CommandMode {
	+ void process(String input)
}

class SingleCommandMode implements CommandMode {
    - CommandProcessorService commandProcessorService
    + void process(String input)
}

class PipedCommandMode implements CommandMode {
    - CommandProcessorService commandProcessorService
    + void process(String input)
    - String buildCommandWithFilepath(String command, boolean isFirstCommand)
}

CommandMode -up- CommandProcessorService

interface OptionExecutor {
	+ void executeOption(String filepath)
}

class ByteCountOptionExecutor implements OptionExecutor {
    - Printer printer
    + void executeOption(String filepath)
}

class LineCountOptionExecutor implements OptionExecutor {
    - Printer printer
    + void executeOption(String filepath)
}

class CharacterCountOptionExecutor implements OptionExecutor {
    - Printer printer
    + void executeOption(String filepath)
}

class WordCountOptionExecutor implements OptionExecutor {
    - Printer printer
    + void executeOption(String filepath)
}

class OptionExecutorFactory {
	- Map<String, OptionExecutor> optionExecutorMap
}

OptionExecutorFactory -- OptionExecutor
WcCommandExecutor -- OptionExecutorFactory

@enduml